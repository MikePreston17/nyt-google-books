{"version":3,"sources":["pages/shared/BookCard.js","pages/BookSearch/SearchBox.js","pages/BookSearch/index.js","pages/SavedBooks/index.js","components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["pStyle","color","backgroundColor","textAlign","lineHeight","BookCard","props","react_default","a","createElement","style","name","inputStyle","border","buttonStyle","margin","SearchBox","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","bind","assertThisInitialized","inherits","createClass","key","value","event","preventDefault","query","target","elements","console","log","onSearch","_this$props","initialQuery","defaultValue","placeholder","type","Component","divStyle","Search","apply","arguments","SearchBox_SearchBox","Saved","Container","_ref","fluid","children","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Jumbotron","height","clear","paddingTop","NoMatch","role","aria-label","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb881edf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst pStyle = {\r\n    color: 'limegreen',\r\n    backgroundColor:'purple',\r\n    textAlign : 'center',\r\n    lineHeight: '100px'\r\n};\r\n\r\nexport function BookCard(props) {\r\n    return (<p style={pStyle}>{props.name}</p>);\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nconst inputStyle = { \r\n    // color: 'limegreen',\r\n    // fontFamily: 'Comic Sans',\r\n    // backgroundColor: 'purple'\r\n    border :'3px solid darkred'\r\n};\r\n\r\nconst buttonStyle = { margin: '10px' }\r\n\r\nexport class SearchBox extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n        const query = event.target.elements.query.value;\r\n        console.log('search: ', query);\r\n        this.props.onSearch(query);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {onSearch, initialQuery} = this.props;\r\n        \r\n        if (initialQuery)\r\n            onSearch(initialQuery)\r\n    }\r\n\r\n    render() {\r\n        const {initialQuery} = this.props;\r\n        return (\r\n            <section>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div>\r\n                        <h3>Enter a word or phrase:</h3>                \r\n                        <input style={inputStyle}  defaultValue={initialQuery}\r\n                            placeholder='Find your book!' type=\"text\" name=\"query\" />\r\n                        <button style={buttonStyle} type=\"submit\">Search</button>\r\n                    </div>\r\n                </form>\r\n            </section>        \r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BookCard } from '../shared/BookCard';\r\nimport { SearchBox } from './SearchBox';\r\n\r\nconst divStyle = {\r\n    margin : '40px',\r\n    border : '5px solid violet'\r\n};\r\n\r\n/**\r\n * TODO \r\n * Maintain the state of the Search Page ONLY (SRP)\r\n */\r\n\r\nexport class Search extends Component {\r\n  render() {\r\n    return (\r\n      <div style={divStyle}>\r\n        {/* <p style={pStyle}>Search Box</p> */}\r\n        <SearchBox/>\r\n        <br/>\r\n        <BookCard name='Book 1'/>\r\n        <BookCard name='Book 2'/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search\r\n","import React, { Component } from 'react';\r\n\r\nconst pStyle = {    \r\n    color : 'orange',\r\n    backgroundColor : 'blue',\r\n    margin : '15px',\r\n    textAlign: 'center'    \r\n};\r\n\r\nconst divStyle = {\r\n    margin: '40px',\r\n    border: '5px solid pink'\r\n};\r\n\r\nexport class Saved extends Component {\r\n  render() {\r\n    return (\r\n      <div style={divStyle}>\r\n        <p style={pStyle}>Saved</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Saved\r\n","import React from \"react\";\r\n\r\n// This allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n      className=\"jumbotron\">\r\n      {children}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1>404 Page Not Found</h1>\r\n            <h1>\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                ðŸ™„\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Search from './pages/BookSearch';\nimport Saved from './pages/SavedBooks';\nimport NoMatch from './pages/NoMatch';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <h1>Google Books Search</h1>\n                <h2>Save books for later!</h2>\n                <Switch>\n                    <Route exact path=\"/\" component={Search}/>\n                    <Route exact path=\"/Saved\" component={Saved}/>                    \n                    <Route component={NoMatch}/>\n                </Switch>\n            </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}