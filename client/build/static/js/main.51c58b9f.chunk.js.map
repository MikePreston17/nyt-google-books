{"version":3,"sources":["pages/BookSearch/BookCard/index.js","pages/BookSearch/SubmitButton.jsx","pages/BookSearch/SearchBar.jsx","pages/BookSearch/BookList.js","utils/API.js","pages/BookSearch/index.js","pages/SavedBooks/index.js","components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/shared/SpinLoad.js","App.js","serviceWorker.js","index.js"],"names":["BookCard","props","id","name","authors","synopsis","removeBook","react_default","a","createElement","className","alt","src","join","onClick","_","SubmitButton","styled","Button","background","border","borderRadius","boxShadow","color","height","padding","StyledComponent","_ref","value","SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","bind","assertThisInitialized","event","preventDefault","query","target","elements","console","log","onSearch","_this$props","initialQuery","filterText","defaultValue","style","inputStyle","placeholder","type","Component","BookList","children","API","getBooks","axios","get","getBook","deleteBook","delete","saveBook","bookData","post","BookSearch","state","books","search","keyName","loadBooks","then","res","catch","err","remaining","filter","p","setState","text","includes","_this2","SearchBar_SearchBar","map","book","assign","key","pStyle","backgroundColor","margin","textAlign","divStyle","Saved","_Component","apply","arguments","inherits","createClass","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","Jumbotron","clear","paddingTop","NoMatch","role","aria-label","rotate360","keyframes","_templateObject","Spinner","div","_templateObject2","Loading","App","BrowserRouter","Switch","Route","component","Search","RenderLoading","SpinLoad","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51c58b9f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nexport default function BookCard(props) {\r\n    \r\n    let {id, name, authors, synopsis, removeBook} = props;\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n        <div className=\"img-container\">            \r\n            <img alt={name} src={'image'}/>\r\n        </div>\r\n        <div className=\"content\">\r\n            <ul>\r\n                {name && <li><strong>{name}</strong></li>}\r\n                {authors && <li><strong>by:</strong> {authors.join(\" \")}</li>}\r\n                {synopsis && <li><strong>Synopsis:</strong> {synopsis}</li>}                \r\n            </ul>\r\n        </div>\r\n\r\n        {/* TODO: find a better button than this... */}\r\n        <span onClick={_ => removeBook(id)} className=\"remove\">\r\n            ùòÖ\r\n        </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { styled } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst SubmitButton = styled(Button)({\r\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n  border: 0,\r\n  borderRadius: 3,\r\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  color: 'white',\r\n  height: 32,\r\n  padding: '0 30px',\r\n});\r\n\r\nexport default function StyledComponent({value}) {    \r\n    return <SubmitButton>{value}</SubmitButton>;\r\n}\r\n","import React, {Component} from 'react'\r\nimport SubmitButton from './SubmitButton'\r\n\r\nexport default class SearchBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n        const query = event.target.elements.query.value;\r\n        console.log('search: ', query);\r\n        this.props.onSearch(query);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {onSearch, initialQuery} = this.props;\r\n        \r\n        if (initialQuery)\r\n            onSearch(initialQuery)\r\n    }\r\n    \r\n    render() {\r\n        const {initialQuery} = this.props;\r\n        return (\r\n            <section>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div>\r\n                        <h3>Enter a word or phrase:</h3>                \r\n                        <input \r\n                            value={this.props.filterText}\r\n                            defaultValue={initialQuery}\r\n                            style={inputStyle} \r\n                            placeholder='Find your book!' type=\"text\" name=\"query\" />\r\n                            {' '}\r\n                            <SubmitButton value={\"Search\"}></SubmitButton>\r\n                        {/* <button style={buttonStyle} type=\"submit\">Search</button> */}\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst inputStyle = { border :'3px solid #f54646'};\r\n// const buttonStyle = { margin: '10px' }","import React from 'react';\r\nexport default function BookList(props) {\r\n    return <div className='wrapper'>{props.children}</div>;\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  \r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  \r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  \r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  \r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  }\r\n};\r\n","import React, { Component } from 'react'\r\nimport BookCard from './BookCard'\r\nimport SearchBar from './SearchBar'\r\nimport BookList from './BookList'\r\nimport API from '../../utils/API';\r\n\r\nexport default class BookSearch extends Component {\r\n   \r\n    state = {\r\n        books: [],\r\n        search: \"\",\r\n        keyName: \"author\"\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadBooks();\r\n    }\r\n\r\n    loadBooks= ()=>{\r\n        API.getBooks()\r\n        // .then(res=> this.setState({books:res.data}))\r\n        .then(res=>console.log(res))\r\n        .catch(err=>console.log(err));\r\n    }\r\n\r\n    removeBook = id => {\r\n        const remaining = this.state.books.filter(p=>p.id!==id);\r\n        console.log('remaining: ', remaining)\r\n        this.setState({books: remaining});\r\n    }\r\n\r\n    onSearch = text => {\r\n        let books = this.state.books;\r\n        console.log('searched for: ', text);        \r\n\r\n        this.setState({search: text});\r\n        // console.log('books:', books)  \r\n\r\n        const remaining = books.filter(p=>{\r\n            console.log('key:', p[this.state.keyName])\r\n            return p[this.state.keyName].includes(text)\r\n        })\r\n\r\n        console.log('rem: ', remaining);\r\n    }   \r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <h1>Books Search</h1>\r\n                <h2>Filter Books</h2>\r\n                <BookList>\r\n                    <SearchBar onSearch={this.onSearch}></SearchBar>\r\n                        <h3>Books found:</h3>\r\n                        {this.state.books\r\n                            .map(book => (\r\n                                <BookCard \r\n                                    {...book} \r\n                                    removeBook={this.removeBook} \r\n                                    key={book.id}/>))}\r\n                </BookList>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nconst pStyle = {    \r\n    color : 'orange',\r\n    backgroundColor : 'blue',\r\n    margin : '15px',\r\n    textAlign: 'center'    \r\n};\r\n\r\nconst divStyle = {\r\n    margin: '40px',\r\n    border: '5px solid pink'\r\n};\r\n\r\n/**\r\n * TODO:\r\n * 1) Render all saved books.\r\n * 2) [View] takes user to GB book.\r\n * 3) [Delete] btn removes from db.\r\n */\r\n\r\nexport class Saved extends Component {\r\n  render() {\r\n    return (\r\n      <div style={divStyle}>\r\n        <p style={pStyle}>Saved</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Saved\r\n","import React from \"react\";\r\n\r\n// This allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n      className=\"jumbotron\">\r\n      {children}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1>404 Page Not Found</h1>\r\n            <h1>\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                üôÑ\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  color: #333;\r\n  font-size: 18px;\r\n  font-family: sans-serif;\r\n\r\n  &:before {\r\n    display: inline-block;\r\n    content: '';\r\n    width: 18px;\r\n    height: 18px;\r\n    border-radius: 50%;\r\n    border: solid 2px #ccc;\r\n    border-bottom-color: #66c;\r\n    animation: ${rotate360} 1s linear infinite;\r\n    margin-right: 6px;\r\n    vertical-align: bottom;\r\n  }\r\n`;\r\n\r\nconst Loading = () => (\r\n  <Spinner>Loading</Spinner>\r\n);\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Search from './pages/BookSearch';\r\nimport Saved from './pages/SavedBooks';\r\nimport NoMatch from './pages/NoMatch';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport SpinLoad from './pages/shared/SpinLoad'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <h1>Google Books Search</h1>\r\n                <h2>Save books for later!</h2>\r\n                <Switch>\r\n                    <Route\r\n                        component={Search} RenderLoading={SpinLoad}\r\n                        exact path=\"/\" initialQuery=\"\" />\r\n                    <Route exact path=\"/Saved\" component={Saved}/>                    \r\n                    <Route component={NoMatch}/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}