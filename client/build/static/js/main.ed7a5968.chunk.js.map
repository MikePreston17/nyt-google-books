{"version":3,"sources":["pages/BookSearch/SearchBar.jsx","pages/components/BookCard/index.js","pages/components/BooksView/index.js","utils/googleBooks.js","utils/API.js","pages/BookSearch/index.js","pages/SavedBooks/index.js","components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/shared/SpinLoad.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","bind","assertThisInitialized","event","preventDefault","query","target","elements","value","console","log","onSearch","_this$props","initialQuery","_this$props2","filterText","react_default","a","createElement","defaultValue","style","inputStyle","placeholder","type","name","buttonStyle","Component","border","margin","BookCard","_ref","volumeInfo","title","authors","description","clickEvent","imageLinks","id","className","join","trim","substring","Fragment","onClick","action","BooksView","handleClick","books","saveBook","viewBook","removeBook","book","find","b","concat","_this2","length","map","_id","uniqueId","assign","key","volumesUrl","API","getBooks","axios","get","getBook","deleteBook","delete","bookData","post","BookSearch","state","search","author","synopsis","keyName","text","replace","then","res","setState","data","items","catch","err","applyFilter","filter","url","previewLink","openInNewTab","window","open","focus","_book$volumeInfo","image","thumbnail","link","Link","to","SearchBar_SearchBar","BooksView_BooksView","Saved","searchText","loadBooks","remaining","count","Container","fluid","children","Row","_ref2","Col","_ref3","size","split","Jumbotron","height","clear","paddingTop","textAlign","NoMatch","role","aria-label","rotate360","keyframes","_templateObject","Spinner","styled","div","_templateObject2","Loading","App","BrowserRouter","Switch","Route","component","Search","RenderLoading","SpinLoad","exact","path","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mWAGqBA,cAEjB,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,SAASP,EAAKO,SAASC,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFAA,wEAKTU,GACLA,EAAMC,iBACN,IAAMC,EAAQF,EAAMG,OAAOC,SAASF,MAAMG,MAC1CC,QAAQC,IAAI,WAAYL,GACxBT,KAAKJ,MAAMmB,SAASN,+CAGL,IAAAO,EACkBhB,KAAKJ,MAA/BmB,EADQC,EACRD,SAAUE,EADFD,EACEC,aAEbA,GACAF,EAASE,oCAGR,IAAAC,EAC8BlB,KAAKJ,MAAjCqB,EADFC,EACED,aAAcE,EADhBD,EACgBC,WACrB,OACIC,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,QAAMlB,SAAUJ,KAAKI,UACjBgB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,SACIV,MAAOO,EACPI,aAAcN,EACdO,MAAOC,EACPC,YAAY,kBAAkBC,KAAK,OAAOC,KAAK,UAC9C,IAELR,EAAAC,EAAAC,cAAA,UAAQE,MAAOK,EAAaF,KAAK,UAAjC,oBAnCeG,aA2CjCL,EAAa,CAAEM,OAAQ,qBACvBF,EAAc,CAAEG,OAAQ,cC5Cf,SAASC,EAASrC,GAC7B,IAAAsC,EAEsDtC,EAAMuC,YAAcvC,EAA/DwC,EAFXF,EAEWE,MAAOC,EAFlBH,EAEkBG,QAASC,EAF3BJ,EAE2BI,YAClBC,GAHTL,EAEwCM,WACd5C,EAAjB2C,YAAYE,EAAK7C,EAAL6C,GAIbd,EAAO/B,EAAM+B,KAEjB,OADAd,QAAQC,IAAI,SAAUa,EAAM,MAAOc,GAE/BrB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,QACXtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,kBAGftB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,WACXtB,EAAAC,EAAAC,cAAA,UACKc,GAAShB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,cAASc,IACtBC,GAAWjB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAJ,IAA0Be,EAAQM,KAAK,MAAMC,QACxDN,GAAelB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,8BAAJ,IAAmCgB,EAAYO,UAAU,EAAE,KAAO,SAErFhC,QAAQC,IAAI,MAAO2B,GAEA,SAAf7C,EAAM+B,KACPP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyB,SAAA,KAAE1B,EAAAC,EAAAC,cAAA,UACEyB,QAAS,kBAAKR,EAAW,CAACS,OAAQ,OAAQP,QAC1CC,UAAU,WAFZ,QAGEtB,EAAAC,EAAAC,cAAA,UACIyB,QAAS,kBAAKR,EAAW,CAACS,OAAQ,OAAQP,QAC1CC,UAAU,WAFd,SAIFtB,EAAAC,EAAAC,cAAA,UACEyB,QAAS,kBAAKR,EAAW,CAACS,OAAQ,SAAUP,QAC5CC,UAAU,aAFZ,sBC9BLO,6MAUjBC,YAAc,SAAA3C,GAAS,IAAAS,EAE+BnB,EAAKD,MAA/CuD,EAFWnC,EAEXmC,MAAOC,EAFIpC,EAEJoC,SAAUC,EAFNrC,EAEMqC,SAAUC,EAFhBtC,EAEgBsC,WAC3BN,EAAezC,EAAfyC,OAAQP,EAAOlC,EAAPkC,GACZc,EAAOJ,EAAMK,KAAK,SAAAC,GAAC,OAAIA,EAAEhB,KAAOA,IAGpC,OAAOO,EAAOJ,QAEV,IAAK,OACDS,EAASE,GACT,MACJ,IAAK,OACDH,EAASG,GACT,MACJ,IAAK,SACDD,EAAWC,GACX,MACJ,QACI1C,QAAQC,IAAKkC,EAAD,+BAAAU,OAAwEV,EAAxE,KAAU,wGAKzB,IAAAW,EAAA3D,KACEmD,EAASnD,KAAKJ,MAAduD,MACP,OACI/B,EAAAC,EAAAC,cAAA,WACK6B,EAAMS,OAAS,GAAKxC,EAAAC,EAAAC,cAAA,0BACpB6B,EAAMU,IAAI,SAAAN,GAAQ,IAEJd,EAAWc,EAAXd,GAAIqB,EAAOP,EAAPO,IACPC,EAAWtB,GAAMqB,EACrB,OACA1C,EAAAC,EAAAC,cAACW,EAADnC,OAAAkE,OAAA,CACIrC,KAAOgC,EAAK/D,MAAMwD,SAAsB,OAAX,SAC7Ba,IAAKF,EACLtB,GAAIsB,EACJxB,WAAYoB,EAAKT,aACbK,cAjDOzB,8BCFjCoC,EAAa,mECAJC,EAAA,CAEbC,SAAU,WACR,OAAOC,IAAMC,IAAI,eAGnBC,QAAS,SAAS9B,GAChB,OAAO4B,IAAMC,IAAI,cAAgB7B,IAGnC+B,WAAY,SAAS/B,GACnB,OAAO4B,IAAMI,OAAO,cAAgBhC,IAGtCW,SAAU,SAASsB,GACjB,OAAOL,IAAMM,KAAK,aAAcD,KCTfE,6MAEjBC,MAAQ,CACJ1B,MAAO,GACPf,MAAO,GACP0C,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,QAAS,YAKblE,SAAW,SAAAmE,GFjBA,IAAgBzE,EEkBvByE,EAAOA,EAAKtC,OAAOuC,QAAQ,OAAQ,KACnCtE,QAAQC,IAAI,iBAAkBoE,IFnBPzE,EEuBhByE,EFtBJb,IAAMC,IAAIJ,EAAa,WAAazD,IEuBtC2E,KAAK,SAAAC,GAAG,OAAIxF,EAAKyF,SAAS,CAAEnC,MAAOkC,EAAIE,KAAKC,MAAOpD,MAAO,GAAI2C,OAAQ,GAAIC,SAAU,GAAIF,OAAQI,MAChGO,MAAM,SAAAC,GAAG,OAAI7E,QAAQC,IAAI4E,QAG9BC,YAAc,SAACC,OAMfvC,SAAW,SAAAE,GACP1C,QAAQC,IAAI,gBAAkByC,GAC9B,IAAIsC,EAAMtC,EAAKpB,WAAW2D,YAE1BjG,EAAKkG,aAAaF,MAQtBzC,SAAW,SAAAG,GAEPY,EAAIf,SAASvD,EAAKgE,IAAIN,IACjB6B,KAAK,SAAAC,GAAG,OAAIxE,QAAQC,IAAIuE,KACxBI,MAAM,SAAAC,GAAG,OAAI7E,QAAQC,IAAI4E,+HATrBG,GACCG,OAAOC,KAAKJ,EAAK,UACvBK,oCAUH3C,GAAM,IACFd,EAA0Ec,EAA1Ed,GADE0D,EACwE5C,EAAtEpB,WAAaC,EADf+D,EACe/D,MAAOC,EADtB8D,EACsB9D,QAASC,EAD/B6D,EAC+B7D,YAAaE,EAD5C2D,EAC4C3D,WAAYsD,EADxDK,EACwDL,YAW/D,MADmB,CAACrD,KAAIL,QAAOC,UAASC,cAAa8D,MATzC5D,EAAW6D,UASqCC,KARjDR,oCAaX,OACI1E,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,aACXtB,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,GAAG,UAAT,mBACApF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACmF,EAAD,CAAW1F,SAAUf,KAAKe,WAC1BK,EAAAC,EAAAC,cAACoF,EAAD,CACItD,SAAUpD,KAAKoD,SACfC,SAAUrD,KAAKqD,SACfF,MAAOnD,KAAK6E,MAAM1B,gBAzEErB,aCKnB6E,oNAEjB9B,MAAQ,CACJ+B,WAAY,GACZzD,MAAO,MAOX0D,UAAY,WACR1C,EAAIC,WACHgB,KAAK,SAAAC,GAAG,OAAGxF,EAAKyF,SAAS,CACtBnC,MAAOkC,EAAIE,KACXnD,MAAO,GACP2C,OAAQ,GACRC,SAAU,OACbI,KAAKvE,QAAQC,IAAI,iBAAkBjB,EAAKgF,MAAM1B,QAC9CsC,MAAM,SAAAC,GAAG,OAAI7E,QAAQC,IAAI4E,QAG9BpC,WAAa,SAAAb,GAKT,IAAMqE,EAAYjH,EAAKgF,MAAM1B,MAAMyC,OAAO,SAAArC,GAAI,OAAIA,EAAKO,MAAQrB,IAE/D5C,EAAKyF,SAAS,CAACnC,MAAO2D,IACtBjH,EAAK2E,WAAW/B,MAGpB+B,WAAa,SAAA/B,GACT5B,QAAQC,IAAI,mBAAqB2B,GAC7BA,GACJ0B,EAAIK,WAAW/B,GACd2C,KAAK,SAAAC,GAAG,OAAIxF,EAAKgH,cACjBpB,MAAM,SAAAC,GAAG,OAAI7E,QAAQC,IAAI4E,yFA9B1B1F,KAAK6G,6CAkCL,OACIzF,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,GAAG,WAAT,oBACCxG,KAAK6E,MAAM1B,MAAM4D,MAAQ,GAAK3F,EAAAC,EAAAC,cAAA,yBAE/BF,EAAAC,EAAAC,cAACoF,EAAD,CAAWpD,WAAYtD,KAAKsD,WAAYH,MAAOnD,KAAK6E,MAAM1B,gBAhDvCrB,cCV5B,SAASkF,EAAT9E,GAAwC,IAAnB+E,EAAmB/E,EAAnB+E,MAAOC,EAAYhF,EAAZgF,SACjC,OAAO9F,EAAAC,EAAAC,cAAA,OAAKoB,UAAS,YAAAgB,OAAcuD,EAAQ,SAAW,KAAOC,GAIxD,SAASC,EAATC,GAAkC,IAAnBH,EAAmBG,EAAnBH,MAAOC,EAAYE,EAAZF,SAC3B,OAAO9F,EAAAC,EAAAC,cAAA,OAAKoB,UAAS,MAAAgB,OAAQuD,EAAQ,SAAW,KAAOC,GAKlD,SAASG,EAATC,GAAiC,IAAlBC,EAAkBD,EAAlBC,KAAML,EAAYI,EAAZJ,SAC1B,OACE9F,EAAAC,EAAAC,cAAA,OACEoB,UAAW6E,EACRC,MAAM,KACN3D,IAAI,SAAA0D,GAAI,MAAI,OAASA,IACrB5E,KAAK,MAEPuE,GCpBQ,SAASO,EAATvF,GAAiC,IAAZgF,EAAYhF,EAAZgF,SAClC,OACE9F,EAAAC,EAAAC,cAAA,OACEE,MAAO,CAAEkG,OAAQ,IAAKC,MAAO,OAAQC,WAAY,IAAKC,UAAW,UACjEnF,UAAU,aACTwE,GCgBQY,MAnBf,WACE,OACE1G,EAAAC,EAAAC,cAAC0F,EAAD,CAAWC,OAAK,GACd7F,EAAAC,EAAAC,cAAC6F,EAAD,KACE/F,EAAAC,EAAAC,cAAC+F,EAAD,CAAKE,KAAK,SACRnG,EAAAC,EAAAC,cAACmG,EAAD,KACErG,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMyG,KAAK,MAAMC,aAAW,gCAA5B,8nBCTd,IAAMC,EAAYC,YAAHC,KASTC,EAAUC,IAAOC,IAAVC,IAaIN,GAUFO,EAJC,kBACdpH,EAAAC,EAAAC,cAAC8G,EAAD,iBCHaK,mLAnBX,OACIrH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,KACItH,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,OACXtB,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACIvH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CACIC,UAAWC,EAAQC,cAAeC,EAClCC,OAAK,EAACC,KAAK,IAAIjI,aAAa,KAChCG,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOM,KAAK,UAAUL,UAAWC,IACjC1H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOM,KAAK,SAASL,UAAWlC,IAChCvF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,UAAWf,cAbpBhG,aCIEqH,QACW,cAA7BnD,OAAOoD,SAASC,UAEe,UAA7BrD,OAAOoD,SAASC,UAEhBrD,OAAOoD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpI,EAAAC,EAAAC,cAACmI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1E,KAAK,SAAA2E,GACjCA,EAAaC","file":"static/js/main.ed7a5968.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n// import SubmitButton from './SubmitButton'\r\n\r\nexport default class SearchBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n        const query = event.target.elements.query.value;\r\n        console.log('search: ', query);\r\n        this.props.onSearch(query);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {onSearch, initialQuery} = this.props;\r\n        \r\n        if (initialQuery)\r\n            onSearch(initialQuery)\r\n    }\r\n\r\n    render() {\r\n        const {initialQuery, filterText} = this.props;\r\n        return (\r\n            <section>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div>\r\n                        <h3>Enter a word or phrase:</h3>                \r\n                        <input \r\n                            value={filterText}\r\n                            defaultValue={initialQuery}\r\n                            style={inputStyle} \r\n                            placeholder='Find your book!' type=\"text\" name=\"query\" />\r\n                            {' '}\r\n                            {/* <SubmitButton value={\"Search\"}></SubmitButton> */}\r\n                        <button style={buttonStyle} type=\"submit\">Search</button>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst inputStyle = { border :'3px solid #f54646'};\r\nconst buttonStyle = { margin: '10px' }","import React from 'react';\r\nimport './style.css';\r\n\r\nexport default function BookCard(props) \r\n    {        \r\n        // console.log('book card props:', props);\r\n        const {title, authors, description, imageLinks} = props.volumeInfo || props;\r\n        let {clickEvent, id}= props;\r\n\r\n        // console.log('images: ', imageLinks)\r\n        // let image = imageLinks.thumbnail;\r\n        let type = props.type;\r\n        console.log('type: ', type, 'id:', id)\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"img-container\">\r\n                    {/* {image && <img alt={title} src={image}/>} */}\r\n                </div>\r\n                <div className=\"content\">\r\n                    <ul>\r\n                        {title && <li><strong>{title}</strong></li>}\r\n                        {authors && <li><strong>by:</strong> {authors.join(\", \").trim()}</li>}\r\n                        {description && <li><strong>Description:</strong> {description.substring(0,150) + \" ...\"}</li>}\r\n                    </ul>\r\n                    {console.log('id:', id)}\r\n                    {\r\n                        (props.type === 'save') ?\r\n                        <><button \r\n                            onClick={()=> clickEvent({action: 'view', id})}\r\n                            className=\"viewBtn\">View</button>\r\n                            <button \r\n                                onClick={()=> clickEvent({action: 'save', id})}\r\n                                className=\"saveBtn\">Save</button>\r\n                        </>\r\n                        : <button                         \r\n                            onClick={()=> clickEvent({action: 'remove', id})}\r\n                            className=\"deleteBtn\">Remove</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n","import React, { Component } from 'react'\r\nimport BookCard from '../BookCard';\r\nimport './style.css'\r\n//Contains the render logic for a list of books.\r\nexport default class BooksView extends Component {\r\n    \r\n    // type = this.props;\r\n    // constructor(){\r\n    //     super();\r\n    //     const { books, saveBook, viewBook, removeBook } = this.props;\r\n    //     // setState({type: saveBook ? 'Save'})\r\n    // }   \r\n\r\n    //TODO: refactor this logic to be in another file (i.e. find a pattern which uses a View.js file)\r\n    handleClick = event => {\r\n        //handle either button:\r\n        const { books, saveBook, viewBook, removeBook } = this.props;\r\n        const { action, id } = event;\r\n        let book = books.find(b => b.id === id);\r\n        // console.log('action: ', action.trim());\r\n\r\n        switch(action.trim())\r\n        {\r\n            case 'view':\r\n                viewBook(book);\r\n                break;\r\n            case 'save':\r\n                saveBook(book);\r\n                break;\r\n            case 'remove':\r\n                removeBook(book);\r\n                break;\r\n            default:\r\n                console.log(!action ? 'No specified button action' : `No button action found for '${action}'`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {        \r\n        const {books} = this.props;\r\n        return (\r\n            <div>\r\n                {books.length > 0 && <h3>Books found:</h3>}\r\n                {books.map(book => {\r\n                        //_id is from Db, id is from Google.\r\n                        const {id, _id} = book;\r\n                        let uniqueId = id || _id;\r\n                        return(\r\n                        <BookCard \r\n                            type={!this.props.saveBook ? 'search' : 'save'}\r\n                            key={uniqueId}\r\n                            id={uniqueId}\r\n                            clickEvent={this.handleClick}\r\n                            {...book} \r\n                            />)\r\n                    })\r\n                }\r\n            </div>            \r\n        )\r\n  }\r\n}","import axios from 'axios';\r\n// const booksUrl = 'https://www.googleapis.com/auth/books?q=';\r\nconst volumesUrl = 'https://www.googleapis.com/books/v1/volumes?q='\r\n\r\nexport default function search(query) {\r\n    return axios.get(volumesUrl + \"intitle+\" + query);\r\n    // return axios.get(booksUrl + query);\r\n}","import axios from \"axios\";\r\n\r\nexport default {\r\n  \r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  \r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  \r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  \r\n  saveBook: function(bookData) {      \r\n    return axios.post(\"/api/books\", bookData);\r\n  }\r\n};\r\n","import React, { Component } from 'react'\r\nimport SearchBar from './SearchBar'\r\nimport BooksView from '../components/BooksView'\r\nimport search from  '../../utils/googleBooks'\r\nimport './style.css';\r\nimport { Link } from  'react-router-dom'\r\nimport API from '../../utils/API';\r\n\r\nexport default class BookSearch extends Component {\r\n   \r\n    state = {\r\n        books: [],\r\n        title: \"\",\r\n        search: \"\",\r\n        author: \"\",\r\n        synopsis: \"\",\r\n        keyName: \"author\"        \r\n    }\r\n\r\n    componentDidMount() {}\r\n    \r\n    onSearch = text => {\r\n        text = text.trim().replace(/\\s+/g, \"+\");\r\n        console.log('searched for: ', text);                \r\n        \r\n        //TODO:\r\n        // 1.) Search the Google Books API.\r\n        search(text)\r\n        .then(res => this.setState({ books: res.data.items, title: \"\", author: \"\", synopsis: \"\", search: text }))\r\n        .catch(err => console.log(err));\r\n    }\r\n    \r\n    applyFilter = (filter) =>{\r\n        //TODO: \r\n        // 1.) Change state.filter to be the incoming filter.\r\n        // 2.) Apply the filtering on render ONLY.  DO NOT ALTER THE DATA.\r\n    }\r\n\r\n    viewBook = book => {\r\n        console.log('viewing book ' + book)\r\n        let url = book.volumeInfo.previewLink;\r\n        // console.log('url: ', url)        \r\n        this.openInNewTab(url);\r\n    }\r\n\r\n    openInNewTab(url) {\r\n        var win = window.open(url, '_blank');\r\n        win.focus();\r\n    }\r\n\r\n    saveBook = book => {        \r\n        // console.log('saving: ', book) \r\n        API.saveBook(this.map(book))\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    map (book) {\r\n        var {id, volumeInfo: {title, authors, description, imageLinks, previewLink}} = book;        \r\n        let image = imageLinks.thumbnail;\r\n        let link = previewLink;\r\n\r\n        // console.log('img: ', image)\r\n        // let description = book.volumeInfo.description;\r\n        // console.log('description: ', description)\r\n        // console.log('image links: ', book.searchInfo.)\r\n        // console.log('mapped: ', mappedBook)\r\n\r\n        const mappedBook = {id, title, authors, description, image, link}\r\n        return mappedBook; \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <Link to=\"/Saved\">Get Saved Books</Link>\r\n                <h1>Books Search</h1>                \r\n                <SearchBar onSearch={this.onSearch}></SearchBar>\r\n                <BooksView\r\n                    saveBook={this.saveBook} \r\n                    viewBook={this.viewBook}\r\n                    books={this.state.books}></BooksView>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport API  from '../../utils/API'\r\nimport {Link} from 'react-router-dom'\r\nimport './style.css'\r\nimport BooksView from '../components/BooksView';\r\n\r\n/**\r\n * TODO: (pseudocode)\r\n * 1) Render all saved books by passing their json as props into a individual BookCard instances (use map()).\r\n * 2) [View] btn takes user to GB book.\r\n * 3) [Delete] btn removes from db.\r\n */\r\n\r\nexport default class Saved extends Component {\r\n\r\n    state = {\r\n        searchText: \"\",\r\n        books: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadBooks();\r\n    }   \r\n\r\n    loadBooks = () => {\r\n        API.getBooks()\r\n        .then(res=> this.setState({ \r\n            books: res.data, \r\n            title: \"\", \r\n            author: \"\", \r\n            synopsis: \"\"}))        \r\n        .then(console.log('books loaded: ', this.state.books))\r\n        .catch(err => console.log(err));\r\n    }    \r\n\r\n    removeBook = id => {\r\n        // console.log('deleting book...' + id)\r\n\r\n        // if(!id) return;\r\n        // console.log('before: ', this.state.books, 'id: ', id);\r\n        const remaining = this.state.books.filter(book => book._id !== id);\r\n        // console.log('remaining: ', remaining)\r\n        this.setState({books: remaining});\r\n        this.deleteBook(id);\r\n    }\r\n    \r\n    deleteBook = id => {\r\n        console.log('deleting book...' + id)\r\n        if(!id) return;\r\n        API.deleteBook(id)\r\n        .then(res => this.loadBooks())\r\n        .catch(err => console.log(err));\r\n    };    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* {console.log('books to render: ', this.state.books)} */}\r\n                <Link to=\"/Search\">Search for Books</Link>\r\n                {this.state.books.count > 0 && <h1>Books Saved</h1>}\r\n                {/* {console.log('viewbook func', this.viewBook)} */}\r\n                <BooksView removeBook={this.removeBook} books={this.state.books}></BooksView>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\n// This allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n      className=\"jumbotron\">\r\n      {children}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1>404 Page Not Found</h1>\r\n            <h1>\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                🙄\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  color: #333;\r\n  font-size: 18px;\r\n  font-family: sans-serif;\r\n\r\n  &:before {\r\n    display: inline-block;\r\n    content: '';\r\n    width: 18px;\r\n    height: 18px;\r\n    border-radius: 50%;\r\n    border: solid 2px #ccc;\r\n    border-bottom-color: #66c;\r\n    animation: ${rotate360} 1s linear infinite;\r\n    margin-right: 6px;\r\n    vertical-align: bottom;\r\n  }\r\n`;\r\n\r\nconst Loading = () => (\r\n  <Spinner>Loading</Spinner>\r\n);\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Search from './pages/BookSearch';\r\nimport Saved from './pages/SavedBooks';\r\nimport NoMatch from './pages/NoMatch';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport SpinLoad from './pages/shared/SpinLoad'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <h1>Google Books Search</h1>\r\n                <h2>Save books for later!</h2>\r\n                <Switch>\r\n                    <Route\r\n                        component={Search} RenderLoading={SpinLoad}\r\n                        exact path=\"/\" initialQuery=\"\" />\r\n                    <Route path=\"/Search\" component={Search}/>\r\n                    <Route path=\"/Saved\" component={Saved}/>\r\n                    <Route component={NoMatch}/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}